<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cleveloper.utilities</groupId>
    <artifactId>openapi-jsonschema-java</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <name>cosmos-openapi-jsonschema-java</name>
    <description>COSMOS utilities for OpenAPI parsing and JSON Schema generation/validation</description>
    <url>https://github.com/cleveloper/utilities-java</url>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.release>17</maven.compiler.release>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Plugin versions -->
        <surefire.version>3.2.5</surefire.version>
        <compiler.plugin.version>3.13.0</compiler.plugin.version>
        <checkstyle.plugin.version>3.3.1</checkstyle.plugin.version>
        <spotbugs.plugin.version>4.8.6.2</spotbugs.plugin.version>
        <pmd.plugin.version>3.22.0</pmd.plugin.version>
        <jacoco.plugin.version>0.8.12</jacoco.plugin.version>
        <fmt.plugin.version>2.23</fmt.plugin.version>

        <!-- Library versions not managed by BOM -->
        <swagger.parser.version>2.1.33</swagger.parser.version>
        <victools.version>4.38.0</victools.version>
        <networknt.jsonschema.version>1.5.8</networknt.jsonschema.version>
        <caffeine.version>3.1.8</caffeine.version>
        <instancio.version>2.9.0</instancio.version>
        <assertj.version>3.25.3</assertj.version>
        <junit.jupiter.version>5.10.3</junit.jupiter.version>
        <spring.boot.version>3.3.3</spring.boot.version>
        <dependency-check.version>9.0.7</dependency-check.version>
    </properties>

    <!-- Use Spring Boot BOM to align common dependency versions (Jackson, Spring, etc.) -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Core JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- OpenAPI parsing -->
        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>${swagger.parser.version}</version>
        </dependency>

        <!-- VicTools JSON Schema generator -->
        <dependency>
            <groupId>com.github.victools</groupId>
            <artifactId>jsonschema-generator</artifactId>
            <version>${victools.version}</version>
        </dependency>
        <!-- Optional modules are loaded reflectively if present; not required for tests
        <dependency>
            <groupId>com.github.victools</groupId>
            <artifactId>jsonschema-module-jackson</artifactId>
            <version>${victools.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.github.victools</groupId>
            <artifactId>jsonschema-module-javax-validation</artifactId>
            <version>${victools.version}</version>
            <optional>true</optional>
        </dependency>
        -->

        <!-- JSON Schema validation (Draft 2020-12) -->
        <dependency>
            <groupId>com.networknt</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>${networknt.jsonschema.version}</version>
        </dependency>

        <!-- Caching -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>${caffeine.version}</version>
        </dependency>

        <!-- Spring Boot autoconfiguration (library, not a starter) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Test Data generation (optional at runtime; used when present) -->
        <dependency>
            <groupId>org.instancio</groupId>
            <artifactId>instancio-core</artifactId>
            <version>${instancio.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.plugin.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <useModulePath>false</useModulePath>
                </configuration>
            </plugin>

            <!-- Code coverage (report during verify; threshold check can be run manually) -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.70</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Formatting: Google Java Style -->
            <plugin>
                <groupId>com.coveo</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <version>${fmt.plugin.version}</version>
                <configuration>
                    <style>GOOGLE</style>
                    <verbose>false</verbose>
                </configuration>
            </plugin>

            <!-- Checkstyle (run with: mvn checkstyle:check) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <consoleOutput>true</consoleOutput>
                </configuration>
            </plugin>

            <!-- SpotBugs (run with: mvn spotbugs:check) -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.plugin.version}</version>
                <configuration>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                </configuration>
            </plugin>

            <!-- PMD (run with: mvn pmd:check) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${pmd.plugin.version}</version>
                <configuration>
                    <printFailingErrors>true</printFailingErrors>
                </configuration>
            </plugin>

            <!-- OWASP Dependency Check (run with: mvn org.owasp:dependency-check-maven:check) -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check.version}</version>
                <configuration>
                    <failBuildOnCVSS>7</failBuildOnCVSS>
                    <format>ALL</format>
                    <outputDirectory>docs/vulnerability-report</outputDirectory>
                    <suppressionFile>dependency-check-suppressions.xml</suppressionFile>
                    <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
                    <cveValidForHours>24</cveValidForHours>
                    <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                    <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
                    <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
